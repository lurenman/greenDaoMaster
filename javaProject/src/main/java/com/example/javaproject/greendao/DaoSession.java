package com.example.javaproject.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.javaproject.greendao.IssueCacheEntity;
import com.example.javaproject.greendao.PropertyDictEntity;
import com.example.javaproject.greendao.ShortNote;
import com.example.javaproject.greendao.ListData;
import com.example.javaproject.greendao.CommonCheckType;

import com.example.javaproject.greendao.IssueCacheEntityDao;
import com.example.javaproject.greendao.PropertyDictEntityDao;
import com.example.javaproject.greendao.ShortNoteDao;
import com.example.javaproject.greendao.ListDataDao;
import com.example.javaproject.greendao.CommonCheckTypeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig issueCacheEntityDaoConfig;
    private final DaoConfig propertyDictEntityDaoConfig;
    private final DaoConfig shortNoteDaoConfig;
    private final DaoConfig listDataDaoConfig;
    private final DaoConfig commonCheckTypeDaoConfig;

    private final IssueCacheEntityDao issueCacheEntityDao;
    private final PropertyDictEntityDao propertyDictEntityDao;
    private final ShortNoteDao shortNoteDao;
    private final ListDataDao listDataDao;
    private final CommonCheckTypeDao commonCheckTypeDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        issueCacheEntityDaoConfig = daoConfigMap.get(IssueCacheEntityDao.class).clone();
        issueCacheEntityDaoConfig.initIdentityScope(type);

        propertyDictEntityDaoConfig = daoConfigMap.get(PropertyDictEntityDao.class).clone();
        propertyDictEntityDaoConfig.initIdentityScope(type);

        shortNoteDaoConfig = daoConfigMap.get(ShortNoteDao.class).clone();
        shortNoteDaoConfig.initIdentityScope(type);

        listDataDaoConfig = daoConfigMap.get(ListDataDao.class).clone();
        listDataDaoConfig.initIdentityScope(type);

        commonCheckTypeDaoConfig = daoConfigMap.get(CommonCheckTypeDao.class).clone();
        commonCheckTypeDaoConfig.initIdentityScope(type);

        issueCacheEntityDao = new IssueCacheEntityDao(issueCacheEntityDaoConfig, this);
        propertyDictEntityDao = new PropertyDictEntityDao(propertyDictEntityDaoConfig, this);
        shortNoteDao = new ShortNoteDao(shortNoteDaoConfig, this);
        listDataDao = new ListDataDao(listDataDaoConfig, this);
        commonCheckTypeDao = new CommonCheckTypeDao(commonCheckTypeDaoConfig, this);

        registerDao(IssueCacheEntity.class, issueCacheEntityDao);
        registerDao(PropertyDictEntity.class, propertyDictEntityDao);
        registerDao(ShortNote.class, shortNoteDao);
        registerDao(ListData.class, listDataDao);
        registerDao(CommonCheckType.class, commonCheckTypeDao);
    }
    
    public void clear() {
        issueCacheEntityDaoConfig.getIdentityScope().clear();
        propertyDictEntityDaoConfig.getIdentityScope().clear();
        shortNoteDaoConfig.getIdentityScope().clear();
        listDataDaoConfig.getIdentityScope().clear();
        commonCheckTypeDaoConfig.getIdentityScope().clear();
    }

    public IssueCacheEntityDao getIssueCacheEntityDao() {
        return issueCacheEntityDao;
    }

    public PropertyDictEntityDao getPropertyDictEntityDao() {
        return propertyDictEntityDao;
    }

    public ShortNoteDao getShortNoteDao() {
        return shortNoteDao;
    }

    public ListDataDao getListDataDao() {
        return listDataDao;
    }

    public CommonCheckTypeDao getCommonCheckTypeDao() {
        return commonCheckTypeDao;
    }

}
